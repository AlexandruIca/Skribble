<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsk_1_1PenMode" kind="class" language="C++" prot="public">
    <compoundname>sk::PenMode</compoundname>
    <basecompoundref refid="classsk_1_1DrawMode" prot="public" virt="non-virtual">sk::DrawMode</basecompoundref>
    <includes refid="draw__mode_8hpp" local="no">draw_mode.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsk_1_1PenMode_1af355aebeb7baed44db1e834d63865ceb" prot="private" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen sk::PenMode::m_pen</definition>
        <argsstring></argsstring>
        <name>m_pen</name>
        <initializer>{ QColor{ &quot;black&quot; },
                m_defaultWidth,
                Qt::SolidLine,
                Qt::RoundCap,
                Qt::RoundJoin }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="100" column="10" bodyfile="src/draw_mode.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsk_1_1PenMode_1a7bd4704df67a44c7532115c26756dda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::PenMode</definition>
        <argsstring>()=default</argsstring>
        <name>PenMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="107" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1a3f9ecf016ced89efd72377495f8c0298" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::PenMode</definition>
        <argsstring>(PenMode const &amp;) noexcept=default</argsstring>
        <name>PenMode</name>
        <param>
          <type><ref refid="classsk_1_1PenMode" kindref="compound">PenMode</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="108" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1af30df0dcf70363a1af6b01afd7c03237" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::PenMode</definition>
        <argsstring>(PenMode &amp;&amp;) noexcept=default</argsstring>
        <name>PenMode</name>
        <param>
          <type><ref refid="classsk_1_1PenMode" kindref="compound">PenMode</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="109" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1aa0d5bd95a7f4d380aacc521e48058fc5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::~PenMode</definition>
        <argsstring>() noexcept override=default</argsstring>
        <name>~PenMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="110" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1ac35ba53957484d4fa733a37493e34e5f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::PenMode</definition>
        <argsstring>(QPen const &amp;pen)</argsstring>
        <name>PenMode</name>
        <param>
          <type>QPen const &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="112" column="14" bodyfile="src/draw_mode.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1ad4bf622fd5d73b95a7af868b272eebd6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::PenMode::PenMode</definition>
        <argsstring>(QPen &amp;&amp;pen)</argsstring>
        <name>PenMode</name>
        <param>
          <type>QPen &amp;&amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="113" column="14" bodyfile="src/draw_mode.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1a901b7f2a4598c086e0a6a1ab56897d54" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto sk::PenMode::operator=</definition>
        <argsstring>(PenMode const &amp;) noexcept -&gt; PenMode &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsk_1_1PenMode" kindref="compound">PenMode</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="115" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1ad7ccf7fd2acaf0f1e8314553d8287f9d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto sk::PenMode::operator=</definition>
        <argsstring>(PenMode &amp;&amp;) noexcept -&gt; PenMode &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsk_1_1PenMode" kindref="compound">PenMode</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1PenMode_1af9ea204940cc286d7f002db81d0e3120" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto sk::PenMode::draw</definition>
        <argsstring>(QPainter &amp;painter, QPoint const &amp;pos, std::optional&lt; QPoint &gt; const &amp;lastPoint) -&gt; void override</argsstring>
        <name>draw</name>
        <reimplements refid="classsk_1_1DrawMode_1a68da51d58a71cc51d90b6dc22b0901be">draw</reimplements>
        <param>
          <type>QPainter &amp;</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QPoint const &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>std::optional&lt; QPoint &gt; const &amp;</type>
          <declname>lastPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/draw_mode.hpp" line="118" column="10" bodyfile="src/draw_mode.cpp" bodystart="18" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements drawing with a pen. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>sk::DrawMode</label>
        <link refid="classsk_1_1DrawMode"/>
      </node>
      <node id="1">
        <label>sk::PenMode</label>
        <link refid="classsk_1_1PenMode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>sk::DrawMode</label>
        <link refid="classsk_1_1DrawMode"/>
      </node>
      <node id="1">
        <label>sk::PenMode</label>
        <link refid="classsk_1_1PenMode"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/draw_mode.hpp" line="98" column="1" bodyfile="src/draw_mode.hpp" bodystart="97" bodyend="121"/>
    <listofallmembers>
      <member refid="classsk_1_1PenMode_1af9ea204940cc286d7f002db81d0e3120" prot="public" virt="virtual"><scope>sk::PenMode</scope><name>draw</name></member>
      <member refid="classsk_1_1DrawMode_1a17f33e119ba63ec150a6d4f0408201a5" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>DrawMode</name></member>
      <member refid="classsk_1_1DrawMode_1a7e67c8f0223b600579d64d5b72a39093" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>DrawMode</name></member>
      <member refid="classsk_1_1DrawMode_1a17774e848afd17f4be4a6b82a3ba200d" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>DrawMode</name></member>
      <member refid="classsk_1_1DrawMode_1a1835bd114eea7d0ef64c66c2a0192a4d" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>getColor</name></member>
      <member refid="classsk_1_1DrawMode_1aecc927c328cc254d373d7342ed26b760" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>getDefaultColor</name></member>
      <member refid="classsk_1_1DrawMode_1add2957ccf11b3ff56ff1980f87f83a87" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>getDefaultWidth</name></member>
      <member refid="classsk_1_1DrawMode_1a8e824aaec9d1a6e68a355f285e07f765" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>getWidth</name></member>
      <member refid="classsk_1_1DrawMode_1a72d80f9c11233511773397de6b51fb7c" prot="protected" virt="non-virtual"><scope>sk::PenMode</scope><name>m_color</name></member>
      <member refid="classsk_1_1DrawMode_1a3fc2ab47922625f2f4ea23b3c60edf21" prot="protected" virt="non-virtual"><scope>sk::PenMode</scope><name>m_defaultColor</name></member>
      <member refid="classsk_1_1DrawMode_1a465f99f21daff2beeb7aae84f6fcf262" prot="protected" virt="non-virtual"><scope>sk::PenMode</scope><name>m_defaultWidth</name></member>
      <member refid="classsk_1_1PenMode_1af355aebeb7baed44db1e834d63865ceb" prot="private" virt="non-virtual"><scope>sk::PenMode</scope><name>m_pen</name></member>
      <member refid="classsk_1_1DrawMode_1a767462eaa44c07e5e0d7f049ececf0b8" prot="protected" virt="non-virtual"><scope>sk::PenMode</scope><name>m_width</name></member>
      <member refid="classsk_1_1PenMode_1a901b7f2a4598c086e0a6a1ab56897d54" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>operator=</name></member>
      <member refid="classsk_1_1PenMode_1ad7ccf7fd2acaf0f1e8314553d8287f9d" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>operator=</name></member>
      <member refid="classsk_1_1DrawMode_1aed85437d3f6b01b316500910eb779502" prot="public" virt="non-virtual" ambiguityscope="sk::DrawMode::"><scope>sk::PenMode</scope><name>operator=</name></member>
      <member refid="classsk_1_1DrawMode_1a27b93ce69da66d1f80c7bc5514a16e7d" prot="public" virt="non-virtual" ambiguityscope="sk::DrawMode::"><scope>sk::PenMode</scope><name>operator=</name></member>
      <member refid="classsk_1_1PenMode_1a7bd4704df67a44c7532115c26756dda2" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>PenMode</name></member>
      <member refid="classsk_1_1PenMode_1a3f9ecf016ced89efd72377495f8c0298" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>PenMode</name></member>
      <member refid="classsk_1_1PenMode_1af30df0dcf70363a1af6b01afd7c03237" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>PenMode</name></member>
      <member refid="classsk_1_1PenMode_1ac35ba53957484d4fa733a37493e34e5f" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>PenMode</name></member>
      <member refid="classsk_1_1PenMode_1ad4bf622fd5d73b95a7af868b272eebd6" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>PenMode</name></member>
      <member refid="classsk_1_1DrawMode_1a4b64408319a031ab25e572e7f38e74d3" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>setColor</name></member>
      <member refid="classsk_1_1DrawMode_1ac0c3ee0c28c5deebdf3dc8b43f30a091" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>setWidth</name></member>
      <member refid="classsk_1_1DrawMode_1ad2a9e4416144c7b4a2ab5c3b5a33ff5b" prot="public" virt="virtual"><scope>sk::PenMode</scope><name>~DrawMode</name></member>
      <member refid="classsk_1_1PenMode_1aa0d5bd95a7f4d380aacc521e48058fc5" prot="public" virt="non-virtual"><scope>sk::PenMode</scope><name>~PenMode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
