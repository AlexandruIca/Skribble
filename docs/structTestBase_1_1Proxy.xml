<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structTestBase_1_1Proxy" kind="struct" language="C++" prot="protected">
    <compoundname>TestBase::Proxy</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structTestBase_1_1Proxy_1a6091068f84277e80a270486e0e7d38c9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string TestBase::Proxy::str</definition>
        <argsstring></argsstring>
        <name>str</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="33" column="21" bodyfile="tests/helper/test.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structTestBase_1_1Proxy_1ae7fabcf5e8fdf1f3fbf800edc19dbcdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestBase::Proxy::Proxy</definition>
        <argsstring>()=default</argsstring>
        <name>Proxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="35" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1a493f47bae4068d9527094ae0eb650d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestBase::Proxy::Proxy</definition>
        <argsstring>(Proxy const &amp;)=delete</argsstring>
        <name>Proxy</name>
        <param>
          <type><ref refid="structTestBase_1_1Proxy" kindref="compound">Proxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1a3c4d14dc511af72cea7a3a7032e44ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestBase::Proxy::Proxy</definition>
        <argsstring>(Proxy &amp;&amp;)=delete</argsstring>
        <name>Proxy</name>
        <param>
          <type><ref refid="structTestBase_1_1Proxy" kindref="compound">Proxy</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1ab92e9289c16e9e98155273c8b27da0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TestBase::Proxy::~Proxy</definition>
        <argsstring>()=default</argsstring>
        <name>~Proxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1abafd93a7e8d140682ff15bd5a9715583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto TestBase::Proxy::operator=</definition>
        <argsstring>(Proxy const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structTestBase_1_1Proxy" kindref="compound">Proxy</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="40" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1a69a27db77815070df2016fc4880b0aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto TestBase::Proxy::operator=</definition>
        <argsstring>(Proxy &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structTestBase_1_1Proxy" kindref="compound">Proxy</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="41" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1a563ac8adb45322e24b71a5789d0389ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto TestBase::Proxy::operator+</definition>
        <argsstring>(T const &amp;arg) -&gt; Proxy &amp;</argsstring>
        <name>operator+</name>
        <param>
          <type>T const &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="44" column="14" bodyfile="tests/helper/test.hpp" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1ac92d0933c60f2a1c67023dfd84e811fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto TestBase::Proxy::operator==</definition>
        <argsstring>(T const &amp;other) -&gt; Proxy &amp;</argsstring>
        <name>operator==</name>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="55" column="14" bodyfile="tests/helper/test.hpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structTestBase_1_1Proxy_1a8209b0f0baa660dcfa9b9566ea75e126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto TestBase::Proxy::operator!=</definition>
        <argsstring>(T const &amp;other) -&gt; Proxy &amp;</argsstring>
        <name>operator!=</name>
        <param>
          <type>T const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/helper/test.hpp" line="62" column="14" bodyfile="tests/helper/test.hpp" bodystart="62" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tests/helper/test.hpp" line="32" column="1" bodyfile="tests/helper/test.hpp" bodystart="31" bodyend="67"/>
    <listofallmembers>
      <member refid="structTestBase_1_1Proxy_1a8209b0f0baa660dcfa9b9566ea75e126" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>operator!=</name></member>
      <member refid="structTestBase_1_1Proxy_1a563ac8adb45322e24b71a5789d0389ba" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>operator+</name></member>
      <member refid="structTestBase_1_1Proxy_1abafd93a7e8d140682ff15bd5a9715583" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>operator=</name></member>
      <member refid="structTestBase_1_1Proxy_1a69a27db77815070df2016fc4880b0aa3" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>operator=</name></member>
      <member refid="structTestBase_1_1Proxy_1ac92d0933c60f2a1c67023dfd84e811fa" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>operator==</name></member>
      <member refid="structTestBase_1_1Proxy_1ae7fabcf5e8fdf1f3fbf800edc19dbcdf" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>Proxy</name></member>
      <member refid="structTestBase_1_1Proxy_1a493f47bae4068d9527094ae0eb650d02" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>Proxy</name></member>
      <member refid="structTestBase_1_1Proxy_1a3c4d14dc511af72cea7a3a7032e44ebd" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>Proxy</name></member>
      <member refid="structTestBase_1_1Proxy_1a6091068f84277e80a270486e0e7d38c9" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>str</name></member>
      <member refid="structTestBase_1_1Proxy_1ab92e9289c16e9e98155273c8b27da0ef" prot="public" virt="non-virtual"><scope>TestBase::Proxy</scope><name>~Proxy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
