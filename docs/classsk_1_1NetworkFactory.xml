<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsk_1_1NetworkFactory" kind="class" language="C++" prot="public">
    <compoundname>sk::NetworkFactory</compoundname>
    <includes refid="network__factory_8hpp" local="no">network_factory.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsk_1_1NetworkFactory_1a613fdebc68e1b3cfa516b752991e9b61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto sk::NetworkFactory::create</definition>
        <argsstring>(sk::NetworkModes const mode) -&gt; std::unique_ptr&lt; AbstractNetwork &gt;</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="namespacesk_1a62f445226b58bbe08f6ab3c4b24e10c5" kindref="member">sk::NetworkModes</ref> const</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/network_factory.hpp" line="24" column="17" bodyfile="src/network_factory.cpp" bodystart="6" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper implementing Factory design pattern. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/network_factory.hpp" line="22" column="1" bodyfile="src/network_factory.hpp" bodystart="21" bodyend="26"/>
    <listofallmembers>
      <member refid="classsk_1_1NetworkFactory_1a613fdebc68e1b3cfa516b752991e9b61" prot="public" virt="non-virtual"><scope>sk::NetworkFactory</scope><name>create</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
