<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classsk_1_1Server" kind="class" language="C++" prot="public" final="yes">
    <compoundname>sk::Server</compoundname>
    <basecompoundref refid="classsk_1_1AbstractNetwork" prot="public" virt="non-virtual">sk::AbstractNetwork</basecompoundref>
    <includes refid="server_8hpp" local="no">server.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsk_1_1Server_1a7174da6120981168d7e71b39240088a9" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; QTcpServer &gt;</type>
        <definition>std::unique_ptr&lt;QTcpServer&gt; sk::Server::m_server</definition>
        <argsstring></argsstring>
        <name>m_server</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="24" column="21" bodyfile="src/server.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsk_1_1Server_1a440b2be7b4311fa732d4dbbbf4912020" prot="private" static="no" mutable="no">
        <type>QTcpSocket *</type>
        <definition>QTcpSocket* sk::Server::m_socket</definition>
        <argsstring></argsstring>
        <name>m_socket</name>
        <initializer>{ nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="25" column="16" bodyfile="src/server.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsk_1_1Server_1a386a7f741876e1e38d644b7a67fe06de" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::Server::Server</definition>
        <argsstring>()</argsstring>
        <name>Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="28" column="14" bodyfile="src/server.cpp" bodystart="9" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1afa9531f2a56030bc9302fd0750fe43f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::Server::Server</definition>
        <argsstring>(Server const &amp;)=delete</argsstring>
        <name>Server</name>
        <param>
          <type><ref refid="classsk_1_1Server" kindref="compound">Server</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1aee0c8a6a6aff89480b165469c5b314cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sk::Server::Server</definition>
        <argsstring>(Server &amp;&amp;)=delete</argsstring>
        <name>Server</name>
        <param>
          <type><ref refid="classsk_1_1Server" kindref="compound">Server</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1ad998a389193b57954f24b88b26b3a2c4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sk::Server::~Server</definition>
        <argsstring>() noexcept override</argsstring>
        <name>~Server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="31" column="5" bodyfile="src/server.cpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1a4b0f7bab88f6d7f06a50e7eeb466a2d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto sk::Server::operator=</definition>
        <argsstring>(Server const &amp;) -&gt; Server &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsk_1_1Server" kindref="compound">Server</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="33" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1a7a33573cbe6010e3a0affd151704b3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto sk::Server::operator=</definition>
        <argsstring>(Server &amp;&amp;) -&gt; Server &amp;=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classsk_1_1Server" kindref="compound">Server</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classsk_1_1Server_1a31fdcb2b79ad69c2168f40b7e1f83e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto sk::Server::getSocket</definition>
        <argsstring>() -&gt; QTcpSocket *override</argsstring>
        <name>getSocket</name>
        <reimplements refid="classsk_1_1AbstractNetwork_1acbe68d2bf6f60867debb0a88b52f86f2">getSocket</reimplements>
        <briefdescription>
<para>Helper to get current connection. </para>
        </briefdescription>
        <detaileddescription>
<para>If the app was started as a server, this returns the client &apos;connection&apos;, If the app was started as a client, this &apos;returns&apos; the server, otherwise it simply returns nullptr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/server.hpp" line="36" column="10" bodyfile="src/server.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements <ref refid="classsk_1_1AbstractNetwork" kindref="compound">AbstractNetwork</ref> for a server. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>sk::Server</label>
        <link refid="classsk_1_1Server"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sk::AbstractNetwork</label>
        <link refid="classsk_1_1AbstractNetwork"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>sk::Server</label>
        <link refid="classsk_1_1Server"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>sk::AbstractNetwork</label>
        <link refid="classsk_1_1AbstractNetwork"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/server.hpp" line="22" column="1" bodyfile="src/server.hpp" bodystart="21" bodyend="37"/>
    <listofallmembers>
      <member refid="classsk_1_1AbstractNetwork_1a06590ab1a7ac31342053470779950fc3" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>AbstractNetwork</name></member>
      <member refid="classsk_1_1AbstractNetwork_1af6084afe4ec81c032314ed535ec1d278" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>AbstractNetwork</name></member>
      <member refid="classsk_1_1AbstractNetwork_1ab47775aaf5b658bfab4b21c82027eb65" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>AbstractNetwork</name></member>
      <member refid="classsk_1_1Server_1a31fdcb2b79ad69c2168f40b7e1f83e0f" prot="public" virt="virtual"><scope>sk::Server</scope><name>getSocket</name></member>
      <member refid="classsk_1_1Server_1a7174da6120981168d7e71b39240088a9" prot="private" virt="non-virtual"><scope>sk::Server</scope><name>m_server</name></member>
      <member refid="classsk_1_1Server_1a440b2be7b4311fa732d4dbbbf4912020" prot="private" virt="non-virtual"><scope>sk::Server</scope><name>m_socket</name></member>
      <member refid="classsk_1_1Server_1a4b0f7bab88f6d7f06a50e7eeb466a2d8" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>operator=</name></member>
      <member refid="classsk_1_1Server_1a7a33573cbe6010e3a0affd151704b3b7" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>operator=</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a3c0471fe9960cd1f17fe97545e83e37b" prot="public" virt="non-virtual" ambiguityscope="sk::AbstractNetwork::"><scope>sk::Server</scope><name>operator=</name></member>
      <member refid="classsk_1_1AbstractNetwork_1abe3063c7d02d0b7effcbd5bd9636623e" prot="public" virt="non-virtual" ambiguityscope="sk::AbstractNetwork::"><scope>sk::Server</scope><name>operator=</name></member>
      <member refid="classsk_1_1AbstractNetwork_1aa67072651a63d579edfb7dd37ed7706e" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>receivedMessage</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a08724481a31f19c2a0d9a3f2b6f28949" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendChangeColor</name></member>
      <member refid="classsk_1_1AbstractNetwork_1acc252fcb7296f122996aabfcc65e4f08" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendChangeWidth</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a564a4e0b753e90a611ad0eb1fc4f2183" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendDrawAt</name></member>
      <member refid="classsk_1_1AbstractNetwork_1afb343f19c09e59903a94227bcc3633b9" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendMouseReleased</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a10dd052c2fc4a9f2186e61564f7ab96b" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendRedo</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a6ace5669328450589d8599eaf65fe3a6" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendToBrush</name></member>
      <member refid="classsk_1_1AbstractNetwork_1ace7f8649f35152cbd614d5726c6a65b1" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendToPen</name></member>
      <member refid="classsk_1_1AbstractNetwork_1a9fb587a700c2c0a984371b980b1a4c85" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>sendUndo</name></member>
      <member refid="classsk_1_1Server_1a386a7f741876e1e38d644b7a67fe06de" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>Server</name></member>
      <member refid="classsk_1_1Server_1afa9531f2a56030bc9302fd0750fe43f9" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>Server</name></member>
      <member refid="classsk_1_1Server_1aee0c8a6a6aff89480b165469c5b314cd" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>Server</name></member>
      <member refid="classsk_1_1AbstractNetwork_1aaa2948b36b6294ba458599e8e16c25be" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>~AbstractNetwork</name></member>
      <member refid="classsk_1_1Server_1ad998a389193b57954f24b88b26b3a2c4" prot="public" virt="non-virtual"><scope>sk::Server</scope><name>~Server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
